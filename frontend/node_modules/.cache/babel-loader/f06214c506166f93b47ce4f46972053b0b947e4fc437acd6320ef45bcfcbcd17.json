{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MG\\\\OneDrive\\\\Desktop\\\\New folder\\\\frontend\\\\src\\\\components\\\\Game.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst moves = ['stone', 'paper', 'scissors'];\nconst Game = ({\n  addGameData\n}) => {\n  _s();\n  const [player1, setPlayer1] = useState('');\n  const [player2, setPlayer2] = useState('');\n  const [move1, setMove1] = useState('');\n  const [move2, setMove2] = useState('');\n  const [score, setScore] = useState({\n    player1: 0,\n    player2: 0\n  });\n  const handleMove = async () => {\n    if (!player1 || !player2 || !move1 || !move2) return;\n    const result = calculateWinner(move1, move2);\n    if (result) {\n      const newScore = {\n        ...score\n      };\n      if (result === 1) newScore.player1++;else if (result === 2) newScore.player2++;\n      setScore(newScore);\n      const gameData = {\n        player1,\n        player2,\n        move1,\n        move2,\n        result\n      };\n      addGameData(gameData);\n\n      // Using fetch to send POST request\n      try {\n        const response = await fetch('http://localhost:5000/api/games', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(gameData)\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        console.log('Game data saved:', data);\n      } catch (error) {\n        console.error('Error saving game data:', error);\n      }\n    }\n  };\n  const calculateWinner = (m1, m2) => {\n    if (m1 === m2) return null; // Tie\n    if (m1 === 'stone' && m2 === 'scissors' || m1 === 'scissors' && m2 === 'paper' || m1 === 'paper' && m2 === 'stone') {\n      return 1; // Player 1 wins\n    }\n    return 2; // Player 2 wins\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Player 1 Name\",\n      value: player1,\n      onChange: e => setPlayer1(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Player 2 Name\",\n      value: player2,\n      onChange: e => setPlayer2(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setMove1(e.target.value),\n      value: move1,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Move\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), moves.map(move => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: move,\n        children: move\n      }, move, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setMove2(e.target.value),\n      value: move2,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Move\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), moves.map(move => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: move,\n        children: move\n      }, move, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleMove,\n      children: \"Play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Score: Player 1: \", score.player1, \" - Player 2: \", score.player2]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"PI0pv4OLr7wKILU7Vt0MHHbxq50=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","moves","Game","addGameData","_s","player1","setPlayer1","player2","setPlayer2","move1","setMove1","move2","setMove2","score","setScore","handleMove","result","calculateWinner","newScore","gameData","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","console","log","error","m1","m2","children","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","map","move","onClick","_c","$RefreshReg$"],"sources":["C:/Users/MG/OneDrive/Desktop/New folder/frontend/src/components/Game.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst moves = ['stone', 'paper', 'scissors'];\r\n\r\nconst Game = ({ addGameData }) => {\r\n  const [player1, setPlayer1] = useState('');\r\n  const [player2, setPlayer2] = useState('');\r\n  const [move1, setMove1] = useState('');\r\n  const [move2, setMove2] = useState('');\r\n  const [score, setScore] = useState({ player1: 0, player2: 0 });\r\n\r\n  const handleMove = async () => {\r\n    if (!player1 || !player2 || !move1 || !move2) return;\r\n\r\n    const result = calculateWinner(move1, move2);\r\n    if (result) {\r\n      const newScore = { ...score };\r\n      if (result === 1) newScore.player1++;\r\n      else if (result === 2) newScore.player2++;\r\n\r\n      setScore(newScore);\r\n      const gameData = { player1, player2, move1, move2, result };\r\n      addGameData(gameData);\r\n      \r\n      // Using fetch to send POST request\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/games', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(gameData),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n\r\n        const data = await response.json();\r\n        console.log('Game data saved:', data);\r\n      } catch (error) {\r\n        console.error('Error saving game data:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const calculateWinner = (m1, m2) => {\r\n    if (m1 === m2) return null; // Tie\r\n    if ((m1 === 'stone' && m2 === 'scissors') || \r\n        (m1 === 'scissors' && m2 === 'paper') || \r\n        (m1 === 'paper' && m2 === 'stone')) {\r\n      return 1; // Player 1 wins\r\n    }\r\n    return 2; // Player 2 wins\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        placeholder=\"Player 1 Name\"\r\n        value={player1}\r\n        onChange={(e) => setPlayer1(e.target.value)}\r\n      />\r\n      <input\r\n        placeholder=\"Player 2 Name\"\r\n        value={player2}\r\n        onChange={(e) => setPlayer2(e.target.value)}\r\n      />\r\n      <select onChange={(e) => setMove1(e.target.value)} value={move1}>\r\n        <option value=\"\">Select Move</option>\r\n        {moves.map(move => (\r\n          <option key={move} value={move}>{move}</option>\r\n        ))}\r\n      </select>\r\n      <select onChange={(e) => setMove2(e.target.value)} value={move2}>\r\n        <option value=\"\">Select Move</option>\r\n        {moves.map(move => (\r\n          <option key={move} value={move}>{move}</option>\r\n        ))}\r\n      </select>\r\n      <button onClick={handleMove}>Play</button>\r\n      <div>Score: Player 1: {score.player1} - Player 2: {score.player2}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}